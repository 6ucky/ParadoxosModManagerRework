//https://github.com/beryx/badass-jlink-plugin/
//https://github.com/brunoborges/javafx-jlink-starter-gradle

plugins {
    id 'java'
    id 'eclipse'
    id 'application'
    id 'org.openjfx.javafxplugin'      version '0.0.8'
    id 'org.beryx.jlink'               version '2.17.1'
}

// Application Configuration
ext {
    appName = "Paradoxos Mod Manager"
    appLauncher = "LaunchParadoxosModManager"
    appPackaging = "ParadoxosModManager"
    appModuleName = "com.pmm.ParadoxosGameModManager"
    appMainClass = "com.pmm.ParadoxosGameModManager.ModManager"
}

mainClassName = "${ext.appModuleName}/${ext.appMainClass}"

repositories {
    mavenCentral()
}

dependencies {
  // https://mvnrepository.com/artifact/com.google.code.gson/gson
  implementation 'com.google.code.gson:gson:2.8.6'

  //https://mvnrepository.com/artifact/org.kordamp.ikonli/
  implementation 'org.kordamp.ikonli:ikonli-javafx:11.3.5'
  implementation 'org.kordamp.ikonli:ikonli-fontawesome5-pack:11.3.5'
  
  // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
  implementation 'org.junit.jupiter:junit-jupiter-api:5.5.2'
}

javafx {
    version = '11'
    modules = [
       'javafx.controls',
       'javafx.fxml'
    ]
}

jlink {
    imageDir = project.file("${buildDir}/${appPackaging}")
    imageZip = project.file("${buildDir}/distributions/${appPackaging}-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = "${appLauncher}"
    }
}

task copyJson(type: Copy) {
    dependsOn 'jlink'
    from "supported_games.json"
    into "${buildDir}/${appPackaging}"
}

task dist {
    dependsOn clean, 'jlink', copyJson, jlinkZip
    doLast {
    	System.out.println("::set-env name=BUILD_ARTIFACT_NAME::${appPackaging}-${javafx.platform.classifier}.zip")
    	System.out.println("::set-env name=BUILD_ARTIFACT_PATH:${buildDir}/${appPackaging}")
    }
    description "Calls clean and then jlinkZip [default]"
}

defaultTasks 'dist'

if (project.hasProperty('debugRun') && project.debugRun as boolean) {
    run {
        jvmArgs '-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=*:5005'
    }
}

eclipse {
    classpath {
        containers 'org.eclipse.buildship.core.gradleclasspathcontainer'
        file {
            whenMerged {
                entries.findAll { it.properties.kind.equals('lib') /*&& !it.properties.path.contains("junit")*/ }.each {
                    it.entryAttributes['module'] = 'true'
                }
                entries.findAll { it.properties.path.startsWith('org.eclipse.jdt.launching.JRE_CONTAINER') }.each {
                    it.entryAttributes['module'] = 'true'
                }

            }
        }
    }
}
